<Window
    x:Class="DicingBlade.Views.MainWindowView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:converters="clr-namespace:DicingBlade.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:DicingBlade.Classes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:DicingBlade.ViewModels"
    xmlns:uc="clr-namespace:DicingBlade.UserControls"
    Title="ЭМ-225"
    Icon="/Views/7863776561600002497-48.png"
    Width="1280"
    Height="1024"
    d:DataContext="{d:DesignInstance model:MainViewModel, IsDesignTimeCreatable=True}"
    Background="#FFE8E8EC"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    mc:Ignorable="d" MinWidth="1280" MinHeight="1024">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MyDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <SolidColorBrush x:Key="SignalGreen" Color="MediumSpringGreen" />
            <SolidColorBrush x:Key="SignalRed" Color="IndianRed" />
            <System:Double x:Key="Zero">0</System:Double>
            <System:Double x:Key="Hundred">100</System:Double>
            <System:Double x:Key="Ycoor">69.515</System:Double>
            <System:Double x:Key="CutStrokeThickness">0.002</System:Double>

            <Storyboard x:Key="PathAnimation">
                <DoubleAnimation
                By="{Binding WvAngle}"
                Storyboard.Target="{Binding ElementName=CutsView}"
                Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                Duration="{Binding RotatingTime, Converter={StaticResource DoubleToDurationConverter}}" />
                <DoubleAnimation
                By="{Binding WvAngle}"
                Storyboard.Target="{Binding ElementName=TracesView}"
                Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                Duration="{Binding RotatingTime, Converter={StaticResource DoubleToDurationConverter}}"/>
                <DoubleAnimation
                By="{Binding WvAngle}"
                Storyboard.Target="{Binding ElementName=ControlPoints}"
                Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                Duration="{Binding RotatingTime, Converter={StaticResource DoubleToDurationConverter}}"/>
                <DoubleAnimation
                By="{Binding WvAngle}"
                Storyboard.Target="{Binding ElementName=SquareWafer}"
                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                Duration="{Binding RotatingTime, Converter={StaticResource DoubleToDurationConverter}}"/>
            </Storyboard>
            <Storyboard x:Key="ResetView">
                <DoubleAnimation
                To="0"
                Storyboard.Target="{Binding ElementName=CutsView}"
                Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                Duration="0" />
                <DoubleAnimation
                To="{Binding WvAngle}"
                Storyboard.Target="{Binding ElementName=TracesView}"
                Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                Duration="0"/>
                <DoubleAnimation
                To="{Binding WvAngle}"
                Storyboard.Target="{Binding ElementName=ControlPoints}"
                Storyboard.TargetProperty="RenderTransform.Children[0].Angle"
                Duration="0"/>
                <DoubleAnimation
                To="0"
                Storyboard.Target="{Binding ElementName=SquareWafer}"
                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                Duration="0"/>
            </Storyboard>
        </ResourceDictionary>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Command="{Binding ToTeachCutShiftCmd}" Key="F6"/>
    </Window.InputBindings>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding KeyDownCmd, Mode=OneWay}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:EventTrigger EventName="KeyUp">
            <i:InvokeCommandAction Command="{Binding KeyUpCmd, Mode=OneWay}" PassEventArgsToCommand="True" />
        </i:EventTrigger>
        <i:PropertyChangedTrigger Binding="{Binding WvRotate}">
            <i:ControlStoryboardAction Storyboard="{StaticResource ResourceKey=PathAnimation}" />
        </i:PropertyChangedTrigger>
        <i:PropertyChangedTrigger Binding="{Binding ResetView}">
            <i:ControlStoryboardAction Storyboard="{StaticResource ResourceKey=ResetView}" />
        </i:PropertyChangedTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Menu Height="22" Grid.ColumnSpan="3">
            <MenuItem Header="Приводы" Command="{Binding MachineSettingsCmd}"/>
            <MenuItem Header="Подложка" Command="{Binding WaferSettingsCmd}"/>
            <MenuItem Header="Технология" Command="{Binding TechnologySettingsCmd}"/>
            <MenuItem Header="Обучение">
                <MenuItem Command="{Binding ToTeachVideoScaleCmd}" Header="_Масштаб видео" />
                <MenuItem Command="{Binding ToTeachChipSizeCmd}" Header="_Размер кристалла" />
            </MenuItem>
        </Menu>
        <ToolBarTray Grid.Row="1" Orientation="Vertical">
            <ToolBar>
                <Button Command="{Binding WaferSettingsCmd}">
                    <Button.ToolTip>
                        Параметры пластины
                    </Button.ToolTip>
                    <Image Source="/Views/Sources/wafer2.png" Height="20"/>
                </Button>
                <Button Command="{Binding MachineSettingsCmd}">
                    <Button.ToolTip>
                        Настройки машины
                    </Button.ToolTip>
                    <Image Source="/Views/Sources/settings.png" Height="20"/>
                </Button>
                <Button Command="{Binding TechnologySettingsCmd}">
                    <Button.ToolTip>
                        Технология
                    </Button.ToolTip>
                    <Image Source="/Views/Sources/techniology.png" Height="20"/>
                </Button>

                <Separator/>
                <Menu ToolTip="Обучение">
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel>
                                <Image Source="/Views/Sources/learning.png" Height="20"/>
                            </StackPanel>
                        </MenuItem.Header>
                        <MenuItem Command="{Binding ToTeachChipSizeCmd}">
                            <MenuItem.Icon>
                                <Image Source="/Views/Sources/size1.png" Height="20"/>
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <TextBlock Text="Размер кристалла"/>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem Command="{Binding ToTeachVideoScaleCmd}">
                            <MenuItem.Icon>
                                <Image Source="/Views/Sources/videoscale.png" Height="20"/>
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <TextBlock Text="Масштаб видео"/>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem Command="{Binding ToTeachCutShiftCmd}" InputGestureText="F6">
                            <MenuItem.Icon>
                                <Image Source="/Views/Sources/cutshift.png" Height="20"/>
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <TextBlock Text="Смещение реза от ТВ"/>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </ToolBar>
        </ToolBarTray>
        <Grid Grid.Row="1" Grid.Column="1">
            <Grid.Resources>
                <Style x:Key="Rec1" TargetType="Rectangle">
                    <Setter Property="Margin" Value="3" />
                    <Setter Property="Width" Value="10" />
                    <Setter Property="Height" Value="10" />
                    <Setter Property="Fill" Value="{StaticResource SignalRed}" />
                    <Setter Property="RadiusX" Value="5" />
                    <Setter Property="RadiusY" Value="5" />
                </Style>
                <Style x:Key="Text1" TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="TextAlignment" Value="Center" />
                    <Setter Property="Background" Value="AliceBlue" />
                    <Setter Property="FontStretch" Value="Normal" />
                    <Setter Property="FontStyle" Value="Normal" />
                    <Setter Property="FontFamily" Value="Arial Black" />
                    <Setter Property="Foreground" Value="#FFF11616" />
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />                
            </Grid.RowDefinitions>
            <GroupBox
            Grid.Row="1"
            Grid.Column="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <GroupBox Header="Шпиндель">
                            <DockPanel>
                                <UniformGrid Columns="1" DockPanel.Dock="Left" >
                                    <Rectangle
                                        Width="5"
                                        Margin="3"                                        
                                        >
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Fill" Value="{StaticResource SignalRed}" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="SpindleOnFreq" />
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Fill" Value="{StaticResource SignalGreen}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <Rectangle
                                        Width="5"
                                        Margin="3"
                                        >
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Fill" Value="{StaticResource SignalRed}" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="SpindleAccelarating" />
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Fill" Value="{StaticResource SignalGreen}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <Rectangle
                                        Width="5"
                                        Margin="3"
                                       >
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Fill" Value="{StaticResource SignalRed}" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="SpindleDeccelarating" />
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Fill" Value="{StaticResource SignalGreen}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <Rectangle
                                        Width="5"
                                        Margin="3"
                                        DockPanel.Dock="Top">
                                        <Rectangle.Style>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Fill" Value="{StaticResource SignalRed}" />
                                                <Style.Triggers>
                                                    <DataTrigger Value="True">
                                                        <DataTrigger.Binding>
                                                            <Binding Path="SpindleStops" />
                                                        </DataTrigger.Binding>
                                                        <Setter Property="Fill" Value="{StaticResource SignalGreen}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </UniformGrid>
                                <StackPanel>
                                    <Grid>
                                        <ProgressBar
                                            Width="150"
                                            Height="30"
                                            Margin="3"
                                            HorizontalAlignment="Center"
                                            Maximum="40000"
                                            Minimum="0"
                                            Value="{Binding SpindleFreqView}" />
                                        <TextBlock Text="{Binding StringFormat={}{0} Об/мин,Path=SpindleFreqView}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Grid>
                                    <Grid>
                                        <ProgressBar
                                            Width="150"
                                            Height="30"
                                            Margin="3"
                                            HorizontalAlignment="Center"
                                            Maximum="12"
                                            Minimum="0"
                                            Value="{Binding SpindleCurrentView}" />
                                        <TextBlock Text="{Binding StringFormat={}{0} A,Path=SpindleCurrentView}"
                                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Grid>

                                </StackPanel>
                            </DockPanel>
                        </GroupBox>
                        <GroupBox Header="СОЖ">
                            <uc:Indicator Width="150" Height="30" CurrentLevel="{Binding Flow}" MinLevel="0" MaxLevel="2" Units="л/мин" NoLessLevel="1"/>
                        </GroupBox>                        
                    </StackPanel>
                    <GroupBox Header="Процесс"  Grid.Row="1">
                        <StackPanel>
                            <TextBlock Text="{Binding ProcessStatus}" TextAlignment="Center"  Background="AliceBlue" FontStretch="Normal" FontStyle="Normal" FontSize="22" FontFamily="Arial Black" Foreground="#FFF11616"/>
                            <Label Content="Скорость резки: "></Label>
                            <Label Content="Количество проходов: "></Label>
                            <Label Content="Изделие: "></Label>
                        </StackPanel>
                    </GroupBox>
                    <StackPanel Grid.Column="1">
                        <StackPanel.Resources>
                            <Style TargetType="uc:ValveStateButton">
                                <Setter Property="BorderOffColor" Value="{StaticResource SignalRed}"/>
                                <Setter Property="BorderOnColor" Value="{StaticResource SignalGreen}"/>
                                <Setter Property="SensorOffColor"  Value="{StaticResource SignalRed}"/>
                                <Setter Property="SensorOnColor"  Value="{StaticResource SignalGreen}"/>
                                <Setter Property="Margin" Value="1"/>
                                <Setter Property="FontFamily" Value="Noto Sans"/>
                                <!--<Setter Property="MyBackground" Value="#2E8364"/>-->                                
                            </Style>
                        </StackPanel.Resources>                        
                        <uc:ValveStateButton ValveName="ОХЛАЖДЕНИЕ ШПИНДЕЛЯ" ValveIsOn="{Binding SpindleCoolantSensorView}" SensorIsOn="{Binding SpindleCoolantSensorView}"/>
                        <uc:ValveStateButton ValveName="ВОДА" ValveIsOn="{Binding CoolantValveView}" SensorIsOn="{Binding CoolantSensorView}"/>
                        <uc:ValveStateButton ValveName="ВАКУУМ" ValveIsOn="{Binding ChuckVacuumValveView}" SensorIsOn="{Binding ChuckVacuumSensorView}"/>
                        <uc:ValveStateButton ValveName="ОБДУВ" ValveIsOn="{Binding BlowingValveView}" SensorIsOn="{Binding AirSensorView}"/>                   
                    </StackPanel>
                    <GroupBox Header="Перемещение" Grid.Row="1" Grid.Column="2" VerticalAlignment="Top">
                        <DockPanel>
                            <StackPanel DockPanel.Dock="Left">
                                <StackPanel.Resources>
                                    <Style TargetType="uc:AxisState">
                                        <Setter Property="NegColor" Value="{StaticResource SignalRed}"/>
                                        <Setter Property="PosColor" Value="{StaticResource SignalGreen}"/>
                                    </Style>
                                </StackPanel.Resources>
                                <uc:AxisState CoordinateName="X" Coordinate="{Binding XView}" MotionDone="{Binding XMotDoneView}" LmtNeg="{Binding XnLmtView}" LmtPos="{Binding XpLmtView}"/>
                                <uc:AxisState CoordinateName="Y" Coordinate="{Binding YView}" MotionDone="{Binding YMotDoneView}" LmtNeg="{Binding YnLmtView}" LmtPos="{Binding YpLmtView}"/>
                                <uc:AxisState CoordinateName="Z" Coordinate="{Binding ZView}" MotionDone="{Binding ZMotDoneView}" LmtNeg="{Binding ZnLmtView}" LmtPos="{Binding ZpLmtView}"/>
                                <uc:AxisState CoordinateName="U" Coordinate="{Binding UView}" MotionDone="{Binding UMotDoneView}" LmtNeg="{Binding UnLmtView}" LmtPos="{Binding UpLmtView}"/>                                
                            </StackPanel>
                            <Grid DockPanel.Dock="Right">
                                <TextBlock Style="{StaticResource Text1}" Text="Быстро" Visibility="{Binding VelocityRegime, Converter={StaticResource MatchEnumConverter}, ConverterParameter={x:Static local:Velocity.Fast}}" />
                                <TextBlock Style="{StaticResource Text1}" Text="Медленно" Visibility="{Binding VelocityRegime, Converter={StaticResource MatchEnumConverter}, ConverterParameter={x:Static local:Velocity.Slow}}" />
                                <TextBlock Style="{StaticResource Text1}" Text="Шаг" Visibility="{Binding VelocityRegime, Converter={StaticResource MatchEnumConverter}, ConverterParameter={x:Static local:Velocity.Step}}" />
                            </Grid>
                        </DockPanel>                       
                    </GroupBox>
                </Grid>
            </GroupBox>
            <Border
            Grid.RowSpan="2"
            BorderBrush="LightGray"
            BorderThickness="3" />
            <Border
            Grid.Column="1"
            BorderBrush="LightGray"
            BorderThickness="3" />
            <DockPanel Grid.RowSpan="{Binding Rows[0]}" Grid.Column="{Binding Cols[0]}">
                <Canvas
                Margin="3"
                VerticalAlignment="Stretch"
                Background="White"
                ClipToBounds="True">
                    <Ellipse Panel.ZIndex="1" Fill="AliceBlue">
                        <Ellipse.Visibility>
                            <Binding
                            Converter="{StaticResource VisConvert}"
                            ConverterParameter="round"
                            Path="WaferView.IsRound" />
                        </Ellipse.Visibility>
                        <Ellipse.Width>
                            <Binding
                            FallbackValue="0"
                            Path="DataContext.WaferView.ShapeSize[0]"
                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type Window}}" />
                        </Ellipse.Width>
                        <Ellipse.Height>
                            <Binding
                            FallbackValue="0"
                            Path="DataContext.WaferView.ShapeSize[1]"
                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type Window}}" />
                        </Ellipse.Height>
                        <Ellipse.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <MultiBinding Converter="{StaticResource TranslateConverterSchemeInverse}">
                                            <Binding
                                            FallbackValue="0"
                                            Path="DataContext.WaferView.ShapeSize[0]"
                                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterSchemeInverse}">
                                            <Binding
                                            FallbackValue="0"
                                            Path="DataContext.WaferView.ShapeSize[1]"
                                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                                <RotateTransform>
                                    <RotateTransform.Angle>
                                        <Binding Path="DataContext.WaferView.Angle" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                    </RotateTransform.Angle>
                                </RotateTransform>
                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>
                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </TransformGroup>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                    <Rectangle
                    x:Name="SquareWafer"
                    Panel.ZIndex="1"
                    Fill="AliceBlue">
                        <Rectangle.Visibility>
                            <Binding
                            Converter="{StaticResource VisConvert}"
                            ConverterParameter="square"
                            Path="WaferView.IsRound" />
                        </Rectangle.Visibility>
                        <Rectangle.Width>
                            <Binding
                            FallbackValue="0"
                            Path="DataContext.WaferView.ShapeSize[0]"
                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type Window}}" />
                        </Rectangle.Width>
                        <Rectangle.Height>
                            <Binding
                            FallbackValue="0"
                            Path="DataContext.WaferView.ShapeSize[1]"
                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type Window}}" />
                        </Rectangle.Height>
                        <!--<Rectangle.Resources>
                            <Storyboard x:Key="WaferAnimation">
                                <DoubleAnimation
                                By="{Binding WvAngle}"
                                Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}"
                                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                                Duration="{Binding RotatingTime, Converter={StaticResource DoubleToDurationConverter}}" />
                            </Storyboard>
                            <Storyboard x:Key="ResetWafer">
                                <DoubleAnimation
                                To="0"
                                Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}"
                                Storyboard.TargetProperty="RenderTransform.Children[1].Angle"
                                Duration="0"
                                />
                            </Storyboard>
                        </Rectangle.Resources>
                        <i:Interaction.Triggers>
                            <i:PropertyChangedTrigger Binding="{Binding WvRotate}">
                                <i:ControlStoryboardAction Storyboard="{StaticResource WaferAnimation}" />
                            </i:PropertyChangedTrigger>
                            <i:PropertyChangedTrigger Binding="{Binding ResetView}">
                                <i:ControlStoryboardAction Storyboard="{StaticResource ResetWafer}" />
                            </i:PropertyChangedTrigger>
                        </i:Interaction.Triggers>-->
                        <Rectangle.RenderTransform>
                            <TransformGroup>
                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <MultiBinding Converter="{StaticResource TranslateConverterSchemeInverse}">
                                            <Binding
                                            FallbackValue="0"
                                            Path="DataContext.WaferView.ShapeSize[0]"
                                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterSchemeInverse}">
                                            <Binding
                                            FallbackValue="0"
                                            Path="DataContext.WaferView.ShapeSize[1]"
                                            RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                            AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                                <RotateTransform />
                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>
                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </TransformGroup>
                        </Rectangle.RenderTransform>

                    </Rectangle>
                    <Path
                    Name="CutsView"
                    Panel.ZIndex="2"
                    Data="{Binding WaferView.RawLines, Converter={StaticResource WaferViewToPathConverter}}"
                    Stroke="YellowGreen">
                        <Path.StrokeThickness>
                            <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.Thickness" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                            </MultiBinding>
                        </Path.StrokeThickness>
                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform />
                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>

                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Path
                    x:Name="BladeCursor"
                    Panel.ZIndex="3"
                    Stroke="Green"
                    StrokeThickness="1">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource GetCursor}">
                                <Binding Path="XView" />
                                <Binding Path="YView" />
                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Canvas}" />
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Canvas}" />
                                <Binding Path="BCCenterXView" />
                                <Binding Path="BCCenterYView" />
                                <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferCurrentShiftView"  RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                    <Path
                    x:Name="CameraCursor"
                    Panel.ZIndex="3"
                    Stroke="OrangeRed"
                    StrokeThickness="1">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource GetCursor}">
                                <Binding Path="XView" />
                                <Binding Path="YView" />
                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Canvas}" />
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Canvas}" />
                                <Binding Path="CCCenterXView" />
                                <Binding Path="CCCenterYView" />
                                <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferCurrentShiftView" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                    <Path
                    Name="BladeTrace"
                    Panel.ZIndex="4"
                    Stroke="Navy"
                    StrokeDashArray="4 4"
                    StrokeThickness="2">
                        <Path.Data>
                            <MultiBinding Converter="{StaticResource TraceConverter}">
                                <Binding Path="XTrace" />
                                <Binding Path="YTrace" />
                                <Binding Path="XTraceEnd" />
                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Canvas}" />
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType=Canvas}" />
                                <Binding Path="DataContext.BCCenterXView" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.BCCenterYView" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferCurrentShiftView" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                            </MultiBinding>
                        </Path.Data>
                    </Path>
                    <Path
                    Name="TracesView"
                    Panel.ZIndex="2"
                    Data="{Binding TracesCollectionView, Converter={StaticResource TraceViewToPathConverter}}"
                    Stroke="Black">
                        <Path.StrokeThickness>
                            <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                <Binding Path="DataContext.Thickness" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                            </MultiBinding>
                        </Path.StrokeThickness>
                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform />
                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>
                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Line
                    Name="AnglePosition"
                    RenderTransformOrigin="0.5,1"
                    Stroke="YellowGreen"
                    StrokeThickness="2"
                    X1="0"
                    X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                    Y1="{Binding Path=Y2, RelativeSource={RelativeSource Mode=Self}}">
                        <Line.Y2>
                            <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                            </MultiBinding>
                        </Line.Y2>

                        <Line.RenderTransform>
                            <RotateTransform>
                                <RotateTransform.Angle>
                                    <Binding Path="DataContext.UView" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                </RotateTransform.Angle>
                            </RotateTransform>
                        </Line.RenderTransform>
                    </Line>
                    <ItemsControl x:Name="ControlPoints" ItemsSource="{Binding ControlPointsView}" Panel.ZIndex="5">
                        <ItemsControl.RenderTransform>
                            <TransformGroup>
                                <RotateTransform />

                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource ScaleCoverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[0]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                            <Binding Path="DataContext.WaferView.ShapeSize[1]" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>
                                <TranslateTransform>
                                    <TranslateTransform.X>
                                        <Binding Path="ActualWidth" Converter="{StaticResource DivideConverter}" ConverterParameter="2" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                    </TranslateTransform.X>
                                    <TranslateTransform.Y>
                                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                        </MultiBinding>
                                    </TranslateTransform.Y>
                                </TranslateTransform>
                            </TransformGroup>
                        </ItemsControl.RenderTransform>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Canvas>
                                    <Line X1="{Binding Path=XStart}"
                                          X2="{Binding Path=XEnd}"
                                          Y1="{Binding Path=YStart}"
                                          Y2="{Binding Path=YEnd}"
                                          StrokeThickness="0.3"
                                          Stroke="{Binding Path=Brush}"
                                          StrokeEndLineCap="Round"
                                          >

                                    </Line>
                                </Canvas>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonDown">
                            <i:InvokeCommandAction PassEventArgsToCommand="True" EventArgsConverter="{Binding Source={StaticResource MouseArgsCanvasConverter}}" EventArgsConverterParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" Command="{Binding LeftClickOnWaferCmd, Mode=OneWay}"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseRightButtonDown">
                            <i:InvokeCommandAction PassEventArgsToCommand="True" EventArgsConverter="{Binding Source={StaticResource MouseArgsCanvasConverter}}" EventArgsConverterParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" Command="{Binding RightClickOnWaferCmd, Mode=OneWay}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Canvas.RenderTransformOrigin>
                        <Point X="0.5"/>
                    </Canvas.RenderTransformOrigin>
                    <Canvas.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </Canvas.RenderTransform>
                </Canvas>
            </DockPanel>



            <Image
            Name="VideoImg"
            Grid.RowSpan="{Binding Rows[1]}"
            Grid.Column="{Binding Cols[1]}"
            Margin="3"
            Panel.ZIndex="0"
            Source="{Binding Bi, Mode=OneWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction PassEventArgsToCommand="True" EventArgsConverter="{Binding Source={StaticResource MouseArgsConverter}}" EventArgsConverterParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Command="{Binding ClickOnImageCmd, Mode=OneWay}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Image>
            <Canvas
            Grid.RowSpan="{Binding Rows[1]}"
            Grid.Column="{Binding Cols[1]}"
            Width="{Binding ElementName=VideoImg, Path=ActualWidth}"
            Height="{Binding ElementName=VideoImg, Path=ActualHeight}"
            Panel.ZIndex="1"
            ClipToBounds="True">
                <Grid Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}">
                    <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    FontFamily="TimesNewRoman"
                    FontSize="3"
                    FontStyle="Normal"
                    FontWeight="Bold"
                    Foreground="OrangeRed"
                    RenderTransformOrigin="0.5,-1"
                    Text="{Binding Path=ProcessMessage}"
                    TextAlignment="Center">

                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Source="{StaticResource Hundred}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Source="{StaticResource Hundred}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    FontFamily="TimesNewRoman"
                    FontSize="3"
                    FontStyle="Normal"
                    FontWeight="Bold"
                    Foreground="GreenYellow"
                    RenderTransformOrigin="0.5,-1"
                    Text="{Binding Path=Process.CutOffset, StringFormat=Корректировка реза\, мм:  {0:N3}}"
                    TextAlignment="Center"
                    Visibility="{Binding Process.CutWidthMarkerVisibility}">
                    <!--<TextBlock.Text>
                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                            <Binding Path="1" FallbackValue="10"/>
                            <Binding Path="1" FallbackValue="20"/>
                        </MultiBinding>
                    </TextBlock.Text>-->
                        <TextBlock.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform>
                                    <ScaleTransform.ScaleX>
                                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Source="{StaticResource Hundred}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleX>
                                    <ScaleTransform.ScaleY>
                                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                            <Binding Source="{StaticResource Hundred}" />
                                        </MultiBinding>
                                    </ScaleTransform.ScaleY>
                                </ScaleTransform>
                            </TransformGroup>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </Grid>
                <Rectangle
                    Name="CutWidth"
                    IsHitTestVisible="False"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                    Height="{Binding Path=CutWidthView}"
                    Stroke="ForestGreen"
                    Visibility="{Binding Process.CutWidthMarkerVisibility, FallbackValue=Hidden}">
                    <Rectangle.StrokeThickness>
                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                            <Binding Source="{StaticResource CutStrokeThickness}" />
                            <Binding Path="Machine.CameraScale" />
                        </MultiBinding>
                    </Rectangle.StrokeThickness>
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="-1" />
                            <TranslateTransform>
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                        <Binding Path="CutWidthView" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                            <TranslateTransform Y="{Binding Path=Process.CutOffset}" />
                            <ScaleTransform ScaleY="{Binding Path=Machine.CameraScale}" />
                            <ScaleTransform ScaleY="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />

                            <TranslateTransform>
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle
                    Name="RealCutWidth"
                    IsHitTestVisible="False"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                    Height="{Binding Path=RealCutWidthView}"
                    Stroke="OrangeRed"
                    Visibility="Visible">
                    <Rectangle.StrokeThickness>
                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                            <Binding Source="{StaticResource CutStrokeThickness}" />
                            <Binding Path="Machine.CameraScale" />
                        </MultiBinding>
                    </Rectangle.StrokeThickness>
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleY="-1" />
                            <TranslateTransform>
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                        <Binding Path="RealCutWidthView" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                            <ScaleTransform ScaleY="{Binding Path=Machine.CameraScale}" />
                            <ScaleTransform ScaleY="{Binding Path=ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />

                            <TranslateTransform>
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>
                <Rectangle
                Name="TeachScaleMarkers"
                Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}"
                Stroke="OrangeRed"
                StrokeThickness="1"
                Visibility="{Binding TeachVScaleMarkersVisibility, FallbackValue=Hidden}">
                    <Rectangle.Height>
                        <MultiBinding Converter="{StaticResource GetRatioConverter}">
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                            <Binding Path="TeachMarkersRatio" />
                        </MultiBinding>
                    </Rectangle.Height>
                    <Canvas.Top>
                        <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                        </MultiBinding>
                    </Canvas.Top>
                    <Rectangle.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.5" ScaleY="-1" />
                            <TranslateTransform X="-10">
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{StaticResource TranslateConverterScheme}">
                                        <Binding Path="Height" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Rectangle}" />
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </TransformGroup>
                    </Rectangle.RenderTransform>
                </Rectangle>

                <Line
                    IsHitTestVisible="False"
                    Stroke="Red" StrokeThickness="1">
                    <Line.X1>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                            <Binding Source="1" />
                        </MultiBinding>
                    </Line.X1>
                    <Line.X2>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                            <Binding Source="2" />
                        </MultiBinding>
                    </Line.X2>
                    <Line.Y1>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                        </MultiBinding>
                    </Line.Y1>
                    <Line.Y2>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                        </MultiBinding>
                    </Line.Y2>
                </Line>
                <Line
                    IsHitTestVisible="False"
                    Stroke="Red" StrokeThickness="1">
                    <Line.Y1>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                            <Binding Source="1" />
                        </MultiBinding>
                    </Line.Y1>
                    <Line.Y2>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                            <Binding Source="2" />
                        </MultiBinding>
                    </Line.Y2>
                    <Line.X1>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                        </MultiBinding>
                    </Line.X1>
                    <Line.X2>
                        <MultiBinding Converter="{StaticResource CrossConverter}" ConverterParameter="0,3">
                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=Canvas}" />
                        </MultiBinding>
                    </Line.X2>
                </Line>
            </Canvas>

        </Grid>
    </Grid>
</Window>
